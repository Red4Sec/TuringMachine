<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>netstandard2.1</TargetFramework>
    <Title>Turing Machine Core</Title>
    <Authors>Red4Sec Cybersecurity S.L.</Authors>
    <Copyright>Red4Sec Cybersecurity S.L.</Copyright>
    <Description>Turing Machine is a Fuzzer developed in Net Standard that allows to fuzz any type of applications or libraries, focused on .Net Framework, Dotnet Core and Net Standard applications.</Description>
    <PackageProjectUrl>https://github.com/Red4Sec/TuringMachine</PackageProjectUrl>
    <RepositoryType>git</RepositoryType>
    <RepositoryUrl>https://github.com/Red4Sec/TuringMachine.git</RepositoryUrl>
    <PackageTags>Fuzzer Fuzzing Hacking Red4Sec</PackageTags>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);CopyProjectReferencesToPackage</TargetsForTfmSpecificBuildOutput>
    <Deterministic>False</Deterministic>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <IsPackable>true</IsPackable>
    <EmbedLocalReferences>true</EmbedLocalReferences>
    <PackageIcon>icon.png</PackageIcon>
    <PackageLicenseFile>LICENSE</PackageLicenseFile>
    <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
  </PropertyGroup>

  <ItemGroup>
    <None Include="..\..\LICENSE">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
    <None Include="icon.png">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
  </ItemGroup>

  <ItemGroup>

    <!--For nuget references-->

    <PackageReference Include="Microsoft.Extensions.FileSystemGlobbing" Version="3.0.1" />
    <PackageReference Include="Mono.Cecil" Version="0.11.1" />
    <PackageReference Include="System.Reflection.Metadata" Version="1.7.0" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="3.0.1" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection.Abstractions" Version="3.0.1" />

    <!--Real references-->

    <PackageReference Include="CommandLineParser" Version="2.6.0" />
    <PackageReference Include="Microsoft.Win32.Registry" Version="4.6.0" />
    <PackageReference Include="Newtonsoft.Json" Version="12.0.3" />
    <PackageReference Include="ReportGenerator.Core" Version="4.3.6" />
  </ItemGroup>

  <!--Replicate roslyn's version pattern logic https://github.com/dotnet/cli/issues/6923#issuecomment-354095128 -->

  <PropertyGroup>
    <Build>$([System.DateTime]::op_Subtraction($([System.DateTime]::get_Now().get_Date()),$([System.DateTime]::new(2000,1,1))).get_TotalDays())</Build>
    <Revision>$([MSBuild]::Divide($([System.DateTime]::get_Now().get_TimeOfDay().get_TotalSeconds()), 2).ToString('F0'))</Revision>
    <Version>1.0.$(Build).$(Revision)</Version>
  </PropertyGroup>

  <!--Add coverlet library-->

  <ItemGroup>
    <ProjectReference Include="..\..\submodules\coverlet\src\coverlet.core\coverlet.core.csproj" PrivateAssets="all">
      <ReferenceOutputAssembly>true</ReferenceOutputAssembly>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <ReferenceOutputAssembly>true</ReferenceOutputAssembly>
      <SpecificVersion>false</SpecificVersion>
    </ProjectReference>
  </ItemGroup>

  <Target DependsOnTargets="ResolveReferences" Name="CopyProjectReferencesToPackage">
    <ItemGroup>
      <BuildOutputInPackage Include="@(ReferenceCopyLocalPaths-&gt;WithMetadataValue('ReferenceSourceTarget', 'ProjectReference'))" />
    </ItemGroup>
  </Target>

</Project>
