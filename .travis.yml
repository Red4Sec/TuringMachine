language: csharp

os:
 - linux
 - osx

dist: bionic
osx_image: xcode9.1

mono: none
dotnet: 2.2.402

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then ulimit -n 2048; fi
install:
  - dotnet tool install -g dotnet-format --version 4.0.40103 --add-source https://dotnet.myget.org/F/format/api/v3/index.json
  - dotnet tool install -g coveralls.net --version 1.0.0
  - export PATH="$PATH:$HOME/.dotnet/tools"
  - dotnet-format --version
  - csmacnz.Coveralls --version
before_script:
  - echo "Checking format ..." 
  - dotnet format --check --dry-run -w src/TuringMachine -v diagnostic
  - dotnet format --check --dry-run -w src/TuringMachine.Core -v diagnostic
  - dotnet format --check --dry-run -w tests/TuringMachine.Core.Tests -v diagnostic
  - dotnet format --check --dry-run -w samples/Coverage.Payload -v diagnostic
  - dotnet format --check --dry-run -w samples/StackOverflowException.Payload -v diagnostic
  - dotnet format --check --dry-run -w samples/vulnserver/VulnServer.Payload -v diagnostic
script:
  - cd tests/TuringMachine.Core.Tests
  - dotnet restore
  - find * -name *.csproj | xargs -I % dotnet add % package coverlet.msbuild
  - dotnet test -v m /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput='../../coverage.xml' /p:Exclude=\"[coverlet.*]*,[*]Coverlet.Core*\"
after_success:
  - echo "Test Success - Branch($TRAVIS_BRANCH) Pull Request($TRAVIS_PULL_REQUEST) Tag($TRAVIS_TAG)"
  - #bash <(curl -s https://codecov.io/bash)
  - REPO_COMMIT_AUTHOR=$(git show -s --pretty=format:"%cn")
  - REPO_COMMIT_AUTHOR_EMAIL=$(git show -s --pretty=format:"%ce")
  - echo $REPO_COMMIT_AUTHOR
  - echo $REPO_COMMIT_AUTHOR_EMAIL
  - echo $TRAVIS_COMMIT_MESSAGE
  - echo $TRAVIS_COMMIT
  - echo $TRAVIS_BRANCH
  - echo $TRAVIS_JOB_ID
  - cd ../../
  - csmacnz.Coveralls --opencover -i coverage.xml --repoTokenVariable COVERALLS_REPO_TOKEN --useRelativePaths --commitId $TRAVIS_COMMIT --commitBranch $TRAVIS_BRANCH --jobId $TRAVIS_JOB_ID --commitMessage "$TRAVIS_COMMIT_MESSAGE"
